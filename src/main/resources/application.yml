spring: 
  datasource: 
    druid: 
      master: 
        type: com.alibaba.druid.pool.DruidDataSource 
        driverClassName: com.mysql.jdbc.Driver 
        url: jdbc:mysql://localhost:3306/master?useSSL=false&characterEncoding=utf8 
        username: root 
        password: root 
        # 连接池的配置信息 
        initial-size: 5 
        min-idle: 5 
        maxActive: 20 
        maxWait: 60000 
        # 配置获取连接等待超时的时间 
        timeBetweenEvictionRunsMillis: 60000 
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
        minEvictableIdleTimeMillis: 300000 
        # 配置一个连接在池中最小生存的时间，单位是毫秒 
        validationQuery: SELECT 1 FROM DUAL 
        testWhileIdle: true 
        testOnBorrow: false 
        testOnReturn: false 
        poolPreparedStatements: true  
        # 打开PSCache，并且指定每个连接上PSCache的大小 
        maxPoolPreparedStatementPerConnectionSize: 20 
      cluster: 
        type: com.alibaba.druid.pool.DruidDataSource 
        driverClassName: com.mysql.jdbc.Driver 
        url: jdbc:mysql://localhost:3306/cluster?useSSL=false&characterEncoding=utf8 
        username: root 
        password: root 
        # 连接池的配置信息 
        initial-size: 5 
        min-idle: 5 
        maxActive: 20 
        maxWait: 60000 
        # 配置获取连接等待超时的时间 
        timeBetweenEvictionRunsMillis: 60000 
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
        minEvictableIdleTimeMillis: 300000 
        # 配置一个连接在池中最小生存的时间，单位是毫秒 
        validationQuery: SELECT 1 FROM DUAL 
        testWhileIdle: true 
        testOnBorrow: false 
        testOnReturn: false 
        poolPreparedStatements: true  
        # 打开PSCache，并且指定每个连接上PSCache的大小
        maxPoolPreparedStatementPerConnectionSize: 20
        
logging:
  file: D:/log/log.txt
  level: #低版本的springboot日志配置有所不同
    com.example.demo.dao: debug
    root: info
